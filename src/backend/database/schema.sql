-- ======================================================
-- üß© B·∫¢NG T√ÄI KHO·∫¢N CHUNG (cho sinh vi√™n, gi√°o vi√™n, admin)
-- ======================================================
CREATE TABLE IF NOT EXISTS user_accounts (
  user_id VARCHAR(20) PRIMARY KEY,         -- M√£ ng∆∞·ªùi d√πng (VD: SV001, GV001, AD001)
  password_sha CHAR(64) NOT NULL,          -- M·∫≠t kh·∫©u ƒë∆∞·ª£c m√£ h√≥a SHA256
  role ENUM('student', 'teacher', 'admin') DEFAULT 'student', -- Vai tr√≤: sinh vi√™n / gi√°o vi√™n / qu·∫£n tr·ªã vi√™n
  is_active TINYINT(1) DEFAULT 1,          -- 1 = t√†i kho·∫£n ƒëang ho·∫°t ƒë·ªông, 0 = b·ªã kh√≥a
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Th·ªùi ƒëi·ªÉm t·∫°o t√†i kho·∫£n
);

-- ======================================================
-- üéì B·∫¢NG H·ªí S∆† SINH VI√äN
-- ======================================================
CREATE TABLE IF NOT EXISTS students (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,    -- ID t·ª± tƒÉng
  user_id VARCHAR(20) NOT NULL,            -- Li√™n k·∫øt v·ªõi b·∫£ng user_accounts (m√£ sinh vi√™n)
  full_name VARCHAR(100) NOT NULL,         -- H·ªç v√† t√™n sinh vi√™n
  gender ENUM('male', 'female', 'other') DEFAULT 'other', -- Gi·ªõi t√≠nh
  birth_date DATE,                         -- Ng√†y sinh
  phone_number VARCHAR(20),                -- S·ªë ƒëi·ªán tho·∫°i
  email VARCHAR(120),                      -- ƒê·ªãa ch·ªâ email
  class_code VARCHAR(20),                  -- M√£ l·ªõp
  department VARCHAR(100),                 -- Khoa ƒë√†o t·∫°o
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Ng√†y t·∫°o h·ªì s∆°
  FOREIGN KEY (user_id) REFERENCES user_accounts(user_id)
    ON DELETE CASCADE                      -- X√≥a t√†i kho·∫£n ‚Üí x√≥a lu√¥n h·ªì s∆° sinh vi√™n
);

-- ======================================================
-- üë®‚Äçüè´ B·∫¢NG H·ªí S∆† GI√ÅO VI√äN
-- ======================================================
CREATE TABLE IF NOT EXISTS teachers (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,    -- ID t·ª± tƒÉng
  user_id VARCHAR(20) NOT NULL,            -- Li√™n k·∫øt v·ªõi user_accounts (m√£ gi√°o vi√™n)
  full_name VARCHAR(100) NOT NULL,         -- H·ªç v√† t√™n gi√°o vi√™n
  gender ENUM('male', 'female', 'other') DEFAULT 'other', -- Gi·ªõi t√≠nh
  birth_date DATE,                         -- Ng√†y sinh
  phone_number VARCHAR(20),                -- S·ªë ƒëi·ªán tho·∫°i
  email VARCHAR(120),                      -- ƒê·ªãa ch·ªâ email
  department VARCHAR(100),                 -- Khoa gi·∫£ng d·∫°y
  position VARCHAR(100),                   -- Ch·ª©c v·ª• (VD: GV, ThS, TS, PGS, GS...)
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Ng√†y t·∫°o h·ªì s∆°
  FOREIGN KEY (user_id) REFERENCES user_accounts(user_id)
    ON DELETE CASCADE                      -- X√≥a t√†i kho·∫£n ‚Üí x√≥a h·ªì s∆° gi√°o vi√™n
);

-- ======================================================
-- üîê B·∫¢NG PHI√äN ƒêƒÇNG NH·∫¨P (SESSION TOKEN)
-- ======================================================
CREATE TABLE IF NOT EXISTS user_sessions (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,    -- ID t·ª± tƒÉng cho m·ªói phi√™n
  user_id VARCHAR(20) NOT NULL,            -- Li√™n k·∫øt ƒë·∫øn user_accounts
  token CHAR(64) NOT NULL UNIQUE,          -- M√£ token duy nh·∫•t (ƒë·ªÉ x√°c th·ª±c)
  issued_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi ƒëi·ªÉm c·∫•p token
  expires_at DATETIME NOT NULL,            -- Th·ªùi ƒëi·ªÉm h·∫øt h·∫°n token
  last_used_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, -- L·∫ßn s·ª≠ d·ª•ng g·∫ßn nh·∫•t
  FOREIGN KEY (user_id) REFERENCES user_accounts(user_id)
    ON DELETE CASCADE                      -- X√≥a t√†i kho·∫£n ‚Üí x√≥a lu√¥n session
);

-- ======================================================
-- üè´ B·∫¢NG DANH S√ÅCH D·ªäCH V·ª§ (d·ªãch v·ª• m√† tr∆∞·ªùng cung c·∫•p)
-- ======================================================
CREATE TABLE IF NOT EXISTS services (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,    -- ID d·ªãch v·ª•
  service_code VARCHAR(10) NOT NULL UNIQUE,-- M√£ d·ªãch v·ª• (VD: DV001)
  name VARCHAR(120) NOT NULL,              -- T√™n d·ªãch v·ª• (VD: ƒê·∫∑t ph√≤ng h·ªçc, ƒêƒÉng k√Ω h·ªçc ph·∫ßn...)
  description TEXT,                        -- M√¥ t·∫£ chi ti·∫øt
  category VARCHAR(50) DEFAULT 'Kh√°c',     -- Danh m·ª•c d·ªãch v·ª• (VD: H·ªçc t·∫≠p, H√†nh ch√≠nh, Th∆∞ vi·ªán, Sinh ho·∫°t, Kh√°c)
  price DECIMAL(12, 2) NOT NULL DEFAULT 0, -- Gi√° (n·∫øu c√≥ ph√≠)
  is_active TINYINT(1) NOT NULL DEFAULT 1, -- 1 = ƒëang ho·∫°t ƒë·ªông, 0 = ng·ª´ng
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Ng√†y t·∫°o
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP -- T·ª± c·∫≠p nh·∫≠t khi s·ª≠a
);

-- ======================================================
-- üíª B·∫¢NG QU·∫¢N L√ù THI·∫æT B·ªä SINH VI√äN (gi·ªõi h·∫°n ƒëƒÉng nh·∫≠p)
-- ======================================================
CREATE TABLE IF NOT EXISTS student_device_registry (
  device_id VARCHAR(128) PRIMARY KEY,      -- M√£ ƒë·ªãnh danh thi·∫øt b·ªã (hash ho·∫∑c UUID)
  current_user_id VARCHAR(20) NOT NULL,    -- Ng∆∞·ªùi d√πng hi·ªán t·∫°i ƒëƒÉng nh·∫≠p tr√™n thi·∫øt b·ªã n√†y
  last_login_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, -- L·∫ßn ƒëƒÉng nh·∫≠p g·∫ßn nh·∫•t
  FOREIGN KEY (current_user_id) REFERENCES user_accounts(user_id)
    ON DELETE CASCADE                      -- X√≥a t√†i kho·∫£n ‚Üí x√≥a lu√¥n thi·∫øt b·ªã li√™n quan
);

-- ======================================================
-- üìú B·∫¢NG GHI NH·∫¨T K√ù ƒêƒÇNG NH·∫¨P THI·∫æT B·ªä SINH VI√äN
-- ======================================================
CREATE TABLE IF NOT EXISTS student_device_logins (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,    -- ID t·ª± tƒÉng
  user_id VARCHAR(20) NOT NULL,            -- Ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p
  device_id VARCHAR(128) NOT NULL,         -- M√£ thi·∫øt b·ªã ƒëƒÉng nh·∫≠p
  login_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi ƒëi·ªÉm ƒëƒÉng nh·∫≠p
  FOREIGN KEY (user_id) REFERENCES user_accounts(user_id)
    ON DELETE CASCADE,                     -- X√≥a t√†i kho·∫£n ‚Üí x√≥a l·ªãch s·ª≠ ƒëƒÉng nh·∫≠p
  INDEX idx_student_device_logins_device (device_id),  -- TƒÉng t·ªëc t√¨m ki·∫øm theo thi·∫øt b·ªã
  UNIQUE KEY uq_student_device_logins_user_device (user_id, device_id) -- M·ªói ng∆∞·ªùi d√πng ch·ªâ l∆∞u 1 b·∫£n ghi / thi·∫øt b·ªã
);

-- ======================================================
-- üßë‚Äçüíº B·∫¢NG H·ªí S∆† QU·∫¢N TR·ªä VI√äN (ADMIN)
-- ======================================================
CREATE TABLE IF NOT EXISTS admin_profiles (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,    -- ID t·ª± tƒÉng
  user_id VARCHAR(20) NOT NULL,            -- Li√™n k·∫øt ƒë·∫øn user_accounts
  full_name VARCHAR(100) NOT NULL,         -- H·ªç v√† t√™n qu·∫£n tr·ªã vi√™n
  email VARCHAR(120),                      -- Email li√™n h·ªá
  phone_number VARCHAR(20),                -- S·ªë ƒëi·ªán tho·∫°i
  department VARCHAR(100),                 -- B·ªô ph·∫≠n l√†m vi·ªác
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Ng√†y t·∫°o h·ªì s∆°
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- T·ª± c·∫≠p nh·∫≠t khi thay ƒë·ªïi
  FOREIGN KEY (user_id) REFERENCES user_accounts(user_id)
    ON DELETE CASCADE,                     -- X√≥a t√†i kho·∫£n ‚Üí x√≥a h·ªì s∆° admin
  UNIQUE KEY uq_admin_profiles_user (user_id) -- M·ªói t√†i kho·∫£n admin ch·ªâ c√≥ 1 h·ªì s∆° duy nh·∫•t
);

-- ======================================================
-- üõí B·∫¢NG ƒê∆†N H√ÄNG (ORDERS)
-- ======================================================
CREATE TABLE IF NOT EXISTS orders (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,           -- ID ƒë∆°n h√†ng t·ª± tƒÉng
  order_code VARCHAR(20) NOT NULL UNIQUE,         -- M√£ ƒë∆°n h√†ng duy nh·∫•t (VD: ORD20250101001)
  user_id VARCHAR(20) NOT NULL,                   -- Ng∆∞·ªùi ƒë·∫∑t h√†ng (sinh vi√™n/gi√°o vi√™n)
  service_code VARCHAR(10) NOT NULL,              -- M√£ d·ªãch v·ª•
  transaction_code VARCHAR(10) NOT NULL,          -- M√£ giao d·ªãch (m√£ chuy·ªÉn kho·∫£n 6 k√Ω t·ª±)
  amount DECIMAL(12, 2) NOT NULL DEFAULT 0,       -- S·ªë ti·ªÅn thanh to√°n
  notes TEXT,                                     -- Ghi ch√∫ t·ª´ ng∆∞·ªùi d√πng
  payment_status ENUM('pending', 'completed', 'failed', 'cancelled') DEFAULT 'pending', -- Tr·∫°ng th√°i thanh to√°n
  payment_method VARCHAR(50) DEFAULT 'bank_transfer', -- Ph∆∞∆°ng th·ª©c thanh to√°n
  paid_at DATETIME,                               -- Th·ªùi ƒëi·ªÉm thanh to√°n th√†nh c√¥ng
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi ƒëi·ªÉm t·∫°o ƒë∆°n
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- T·ª± c·∫≠p nh·∫≠t khi s·ª≠a
  FOREIGN KEY (user_id) REFERENCES user_accounts(user_id)
    ON DELETE CASCADE,                            -- X√≥a t√†i kho·∫£n ‚Üí x√≥a ƒë∆°n h√†ng
  FOREIGN KEY (service_code) REFERENCES services(service_code)
    ON DELETE CASCADE,                            -- X√≥a d·ªãch v·ª• ‚Üí x√≥a ƒë∆°n h√†ng li√™n quan
  INDEX idx_orders_user (user_id),                -- TƒÉng t·ªëc truy v·∫•n theo user
  INDEX idx_orders_status (payment_status),       -- TƒÉng t·ªëc truy v·∫•n theo tr·∫°ng th√°i
  INDEX idx_orders_transaction (transaction_code) -- TƒÉng t·ªëc t√¨m ki·∫øm theo m√£ giao d·ªãch
);
